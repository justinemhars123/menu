import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int[] array = new int[5]; // Create an integer array with a size of 10
        int size = 0; // Current size of the array

        while (true) {
            System.out.println("\nMenu:");
            System.out.println("1. Populate the array");
            System.out.println("2. Insert an element");
            System.out.println("3. Delete an element");
            System.out.println("4. Search for an element");
            System.out.println("5. Sort the array");
            System.out.println("6. Print the array");
            System.out.println("7. Exit");

            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    populateArray(array, scanner);
                    break;
                case 2:
                    insertElement(array, scanner, size);
                    size++;
                    break;
                case 3:
                    deleteElement(array, scanner, size);
                    size--;
                    break;
                case 4:
                    searchElement(array, scanner, size);
                    break;
                case 5:
                    sortArray(array, size);
                    break;
                case 6:
                    printArray(array, size);
                    break;
                case 7:
                    System.out.println("Exiting the program.");
                    scanner.close();
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
                    break;
            }
        }
    }

    // Method to populate the array
    private static void populateArray(int[] array, Scanner scanner) {
        System.out.println("Enter elements to populate the array (separated by spaces): ");
        for (int i = 0; i < array.length; i++) {
            System.out.print("Enter element " + (i + 1) + ": ");
            array[i] = scanner.nextInt();
        }
    }

    // Method to insert an element
    private static void insertElement(int[] array, Scanner scanner, int size) {
        if (size == array.length) {
            System.out.println("Array is full. Cannot insert more elements.");
        } else {
            System.out.print("Enter the element to insert: ");
            int element = scanner.nextInt();
            System.out.print("Enter the index to insert at: ");
            int index = scanner.nextInt();

            if (index < 0 || index > size) {
                System.out.println("Invalid index.");
            } else {
                // Shift elements to make space for the new element
                for (int i = size; i > index; i--) {
                    array[i] = array[i - 1];
                }
                array[index] = element;
                System.out.println("Element inserted successfully.");
            }
        }
    }

    // Method to delete an element
    private static void deleteElement(int[] array, Scanner scanner, int size) {
        if (size == 0) {
            System.out.println("Array is empty. Nothing to delete.");
        } else {
            System.out.print("Enter the index to delete: ");
            int index = scanner.nextInt();

            if (index < 0 || index >= size) {
                System.out.println("Invalid index.");
            } else {
                // Shift elements to remove the element
                for (int i = index; i < size - 1; i++) {
                    array[i] = array[i + 1];
                }
                System.out.println("Element deleted successfully.");
            }
        }
    }

    // Method to search for an element
    private static void searchElement(int[] array, Scanner scanner, int size) {
        System.out.print("Enter the element to search for: ");
        int searchElement = scanner.nextInt();
        boolean found = false;

        for (int i = 0; i < size; i++) {
            if (array[i] == searchElement) {
                System.out.println("Element found at index " + i);
                found = true;
                break;
            }
        }

        if (!found) {
            System.out.println("Element not found in the array.");
        }
    }

    // Method to sort the array
    private static void sortArray(int[] array, int size) {
        Arrays.sort(array, 0, size); // Sort the array from index 0 to size-1
        System.out.println("Array sorted successfully.");
    }

    // Method to print the array
    private static void printArray(int[] array, int size) {
        System.out.print("Array elements: ");
        for (int i = 0; i < size; i++) {
            System.out.print(array[i] + " ");
        }
        System.out.println();
    }
}
